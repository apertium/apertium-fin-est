<?xml version="1.0" encoding="UTF-8"?>
<!-- -*- nxml -*- -->
<interchunk>
  <section-def-cats>
    <def-cat n="SN">
      <cat-item tags="SN"/>
      <cat-item tags="SN.*"/>
    </def-cat>
    <def-cat n="PRN">
      <cat-item tags="PRN"/>
      <cat-item tags="PRN.*"/>
    </def-cat>
    <def-cat n="QST">
      <cat-item tags="QST"/>
    </def-cat>
    <def-cat n="SV">
      <cat-item tags="SV"/>
      <cat-item tags="SVNEG"/> <!-- ??? -->
      <cat-item tags="SV.*"/>
    </def-cat>
    <def-cat n="SVNEG">
      <cat-item tags="SVNEG"/>
    </def-cat>
    <def-cat n="ADV">
      <cat-item tags="ADV"/>
    </def-cat>
    <def-cat n="SENT">
      <cat-item tags="SENT"/>
    </def-cat>
  </section-def-cats>

  <section-def-attrs>
    <def-attr n="a_nbr">
      <attr-item tags="sg"/>
      <attr-item tags="pl"/>
      <attr-item tags="sp"/>
      <attr-item tags="ND"/>
    </def-attr>
    <def-attr n="a_arg2">  <!-- for minä tykkään - mulle meeldib -->
      <attr-item tags="arg2_nom"/>
    </def-attr>
    <def-attr n="a_person">
      <attr-item tags="p1"/>
      <attr-item tags="p2"/>
      <attr-item tags="p3"/>
    </def-attr>
    <def-attr n="a_poss">
      <attr-item tags="px1sg"/>
      <attr-item tags="px2sg"/>
      <attr-item tags="px3sg"/>
      <attr-item tags="px1pl"/>
      <attr-item tags="px2pl"/>
      <attr-item tags="px3pl"/>
      <attr-item tags="px3"/>
    </def-attr>
    <def-attr n="a_cas">
      <attr-item tags="nom"/>
      <attr-item tags="acc"/>   <!-- fin -->
      <attr-item tags="gen"/>
      <attr-item tags="par"/>
      <attr-item tags="ins"/>
      <attr-item tags="abl"/>
      <attr-item tags="ill"/>
      <attr-item tags="ade"/>
      <attr-item tags="all"/>
      <attr-item tags="ine"/>
      <attr-item tags="ela"/>
      <attr-item tags="ess"/>
      <attr-item tags="tra"/>
      <attr-item tags="abe"/>
      <attr-item tags="com"/>
    </def-attr>
  </section-def-attrs>

  <section-def-vars>
    <def-var n="number"/>
    <def-var n="POST"/>
    <def-var n="verb_nbr_pers" v=""/>   <!-- finite verb number and person; initially unset -->
    <def-var n="upper_lower"/>
    <def-var n="px"/>       <!-- clumsy way to get the upper-lower info into new chunk -->
    <def-var n="pron_tags"/>  <!-- for inserted pronoun -->
    <def-var n="pron_word"/>  <!-- for inserted pronoun -->
  </section-def-vars>

  <section-def-macros>

    <def-macro n="remember_verb" npar="1" c="remember verb person and number for handling possessive clitics">
      <choose>
      <when>
        <test><equal><clip pos="1" part="a_person"/><lit-tag v="p1"/></equal></test>
        <let><var n="verb_nbr_pers"/><lit v="px1"/></let>
      </when>
      <when>
        <test><equal><clip pos="1" part="a_person"/><lit-tag v="p2"/></equal></test>
        <let><var n="verb_nbr_pers"/><lit v="px2"/></let>
      </when>
      <when>
        <test><equal><clip pos="1" part="a_person"/><lit-tag v="p3"/></equal></test>
        <let><var n="verb_nbr_pers"/><lit v="px3"/></let>
      </when>
      </choose>
      <choose>
      <!-- <append n="verb_nbr_pers"><clip pos="1" part="a_nbr"/></append> doesn't work, thus 2 tests below -->
      <when>
        <test><equal><clip pos="1" part="a_nbr"/><lit-tag v="sg"/></equal></test>
        <append n="verb_nbr_pers"><lit v="sg"/></append>
      </when>
      <when>
        <test><equal><clip pos="1" part="a_nbr"/><lit-tag v="pl"/></equal></test>
        <append n="verb_nbr_pers"><lit v="pl"/></append>
      </when>
      </choose>
    </def-macro>

    <def-macro n="gen_pers_pron_pseudolemma" npar="1"> <!-- create a pers pronoun from px... tag -->
          <let><var n="pron_word"/><lit v=""/></let>
          <let><var n="pron_tags"/><lit-tag v="prn"/></let>
            <append n="pron_tags"><lit-tag v="pers"/></append>
          <choose><when>
            <test>
              <equal><clip pos="1" part="a_poss"/><lit-tag v="px1sg"/></equal>
            </test>
            <let><var n="pron_word"/><lit v="mina"/></let>
            <append n="pron_tags"><lit-tag v="p1"/></append>
            <append n="pron_tags"><lit-tag v="sg"/></append>
          </when></choose>
          <choose><when>
            <test>
              <equal><clip pos="1" part="a_poss"/><lit-tag v="px2sg"/></equal>
            </test>
            <let><var n="pron_word"/><lit v="sina"/></let>
            <append n="pron_tags"><lit-tag v="p2"/></append>
            <append n="pron_tags"><lit-tag v="sg"/></append>
          </when></choose>
          <choose><when>
            <test>
              <equal><clip pos="1" part="a_poss"/><lit-tag v="px3sg"/></equal>
            </test>
            <let><var n="pron_word"/><lit v="tema"/></let>
            <append n="pron_tags"><lit-tag v="p3"/></append>
            <append n="pron_tags"><lit-tag v="sg"/></append>
          </when></choose>
          <choose><when>
            <test>
              <equal><clip pos="1" part="a_poss"/><lit-tag v="px1pl"/></equal>
            </test>
            <let><var n="pron_word"/><lit v="meie"/></let>
            <append n="pron_tags"><lit-tag v="p1"/></append>
            <append n="pron_tags"><lit-tag v="pl"/></append>
          </when></choose>
          <choose><when>
            <test>
              <equal><clip pos="1" part="a_poss"/><lit-tag v="px2pl"/></equal>
            </test>
            <let><var n="pron_word"/><lit v="teie"/></let>
            <append n="pron_tags"><lit-tag v="p2"/></append>
            <append n="pron_tags"><lit-tag v="pl"/></append>
          </when></choose>
          <choose><when>
            <test>
              <equal><clip pos="1" part="a_poss"/><lit-tag v="px3pl"/></equal>
            </test>
            <let><var n="pron_word"/><lit v="nemad"/></let>
            <append n="pron_tags"><lit-tag v="p3"/></append>
            <append n="pron_tags"><lit-tag v="pl"/></append>
          </when></choose>
          <append n="pron_tags"><lit-tag v="gen"/></append>
    </def-macro>

    <def-macro n="forget_verb" npar="0" c="set the variable to empty">
        <let><var n="verb_nbr_pers"/><lit v=""/></let>
    </def-macro>

  </section-def-macros>

  <section-rules>

    <rule comment="REGLA: SN">
      <pattern>
        <pattern-item n="SN"/>
      </pattern>
      <action>
      <choose>
        <when>  <!-- a possessive tag should convert to a pronoun -->
          <test> 
              <contains-substring><clip pos="1" part="a_poss"/><lit v="px"/></contains-substring>
          </test>
          <choose>  <!-- either a personal pronoun or oma -->
            <when>  <!-- test for same-referral -->
              <test> <!-- refering to the same subject -->
                <and>
                <contains-substring><var n="verb_nbr_pers"/><lit v="px"/></contains-substring>
                <contains-substring><clip pos="1" part="a_poss"/><var n="verb_nbr_pers"/></contains-substring>
                </and>
              </test>
              <let><var n="pron_word"/><lit v="oma"/></let>
              <let><var n="pron_tags"/><lit-tag v="prn"/></let>
              <append n="pron_tags"><lit-tag v="sg"/></append>
              <append n="pron_tags"><lit-tag v="gen"/></append>
            </when>
            <otherwise> <!-- refering to different subjects - it should be a personal pronoun -->
              <call-macro n="gen_pers_pron_pseudolemma"><with-param pos="1"/></call-macro>
            </otherwise>
          </choose>
          <let><var n="px"/><lit v="px"/></let>
          <let><var n="upper_lower"/><case-of pos="1" part="lem"/></let>
          <choose><when>
            <test>
              <equal><var n="upper_lower"/><lit v="Aa"/></equal>
            </test>
            <let><var n="px"/><lit v="Px"/></let>
          </when></choose>
          <out>
            <chunk>
              <var n="px"/>
              <lit-tag v="PRN"/>
              <var n="pron_tags"/>
              <lit v="{^"/>
              <var n="pron_word"/>
              <var n="pron_tags"/>
              <lit v="$}"/>
            </chunk>
            <b />
          </out>
          <modify-case><clip pos="1" part="lem"/><lit v="aa"/></modify-case>
          <call-macro n="forget_verb"></call-macro> <!-- assuming that coordin words are in the same chunk... -->
        </when>
      </choose>
      <out>
        <chunk>
          <clip pos="1" part="whole"/>
        </chunk>
      </out>
      </action>
    </rule>

    <rule comment="REGLA: SV">
      <pattern>
        <pattern-item n="SV"/>
      </pattern>
      <action>
        <call-macro n="remember_verb"><with-param pos="1"/></call-macro>
        <out>
          <chunk>
            <clip pos="1" part="lem"/>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: PRN">
      <pattern>
        <pattern-item n="PRN"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <clip pos="1" part="lem"/>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: SV QST">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="QST"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="2" part="lem"/></get-case-from>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b pos="1"/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="1" part="lem"/></get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>


    <rule comment="REGLA: SV QST SN">
      <pattern>
        <pattern-item n="SV"/>
        <pattern-item n="QST"/>
        <pattern-item n="SN"/>
      </pattern>
      <action>
        <choose><when><test><equal><clip pos="1" part="a_arg2"/><lit-tag v="arg2_nom"/></equal></test>
                      <let><clip pos="3" part="a_cas"/><lit-tag v="nom"/></let></when></choose>
        <out>
          <chunk>
            <get-case-from pos="1">
              <clip pos="2" part="lem"/></get-case-from>
            <clip pos="2" part="tags"/>
            <clip pos="2" part="chcontent"/>
          </chunk>
          <b pos="1"/>
          <chunk>
            <get-case-from pos="2">
              <clip pos="1" part="lem"/></get-case-from>
            <clip pos="1" part="tags"/>
            <clip pos="1" part="chcontent"/>
          </chunk>
          <b pos="2"/>
          <chunk>
              <clip pos="3" part="lem"/>
            <clip pos="3" part="tags"/>
            <clip pos="3" part="chcontent"/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: reorder SVNEG ADV SV   ">
      <pattern>
        <pattern-item n="SVNEG"/>
        <pattern-item n="ADV"/>
        <pattern-item n="SV"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <clip pos="1" part="whole"/>
          </chunk>
          <b pos="1"/>
          <chunk>
            <clip pos="3" part="whole"/>
          </chunk>
          <b pos="2"/>
          <chunk>
            <clip pos="2" part="whole"/>
          </chunk>
        </out>
      </action>
    </rule>

    <rule comment="REGLA: SENT">
      <pattern>
        <pattern-item n="SENT"/>
      </pattern>
      <action>
        <out>
          <chunk>
            <clip pos="1" part="whole"/>
          </chunk>
        </out>
        <call-macro n="forget_verb"><with-param pos="1"/></call-macro>  <!-- a new sentence starts from blank -->
      </action>
    </rule>


  </section-rules>
</interchunk>

